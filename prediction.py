# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P0Ds3S4HWIPxwFgQcJWUcgxlQkqbZ9G_
"""

import pandas as pd
import joblib
import warnings
warnings.filterwarnings("ignore", category=UserWarning)


model = joblib.load('random_forest_model.pkl')
model_columns = joblib.load('model_columns.pkl')  # daftar kolom fitur

# Buat data input untuk prediksi (pastikan input ini sesuai dengan struktur data pelatihan)
input_data = {
    'Age': [38],
    # Travel_Rarely : 0, Travel_Frequently : 1, Non-Travel : 2
    'BusinessTravel': [1],
    'DailyRate': [1444],
    # Human Resources : 0, Research & Development : 1, Sales : 2
    'Department': [0],
    'DistanceFromHome': [1],
    'Education': [4],
    # Other : 0, Human Resources : 1, Life Sciences : 2, Marketing : 3, Medical : 4, Technical Degree : 5
    'EducationField': [0],
    'EnvironmentSatisfaction': [4],
    'Gender': [0],  # Male : 0, Female : 1
    'HourlyRate': [88],
    'JobInvolvement': [3],
    'JobLevel': [1],
    'JobRole': [8],  # Sales Executive : 0, Research Scientist : 1, Laboratory Technician : 2, Manufacturing Director : 3, Healthcare Representative : 4, Manager : 5, Research Director : 6, Sales Representative : 7, Human Resources : 8
    'JobSatisfaction': [2],
    'MaritalStatus': [0],  # Married : 0, Single : 1, Divorced : 2
    'MonthlyIncome': [2991],
    'MonthlyRate': [5224],
    'NumCompaniesWorked': [0],
    'OverTime': [0],  # Yes : 0, No : 1
    'PercentSalaryHike': [11],
    'PerformanceRating': [3],
    'RelationshipSatisfaction': [2],
    'StockOptionLevel': [1],
    'TotalWorkingYears': [7],
    'TrainingTimesLastYear': [2],
    'WorkLifeBalance': [3],
    'YearsAtCompany': [6],
    'YearsInCurrentRole': [2],
    'YearsSinceLastPromotion': [1],
    'YearsWithCurrManager': [2]
}

# Ubah input_data menjadi DataFrame
input_df = pd.DataFrame(input_data)
input_df = input_df[model_columns]

# Lakukan prediksi
prediction = model.predict(input_df)

# Tampilkan hasil prediksi
if prediction[0] == 1:
    print("Karyawan kemungkinan akan mengundurkan diri (Attrition).")
else:
    print("Karyawan kemungkinan tidak akan mengundurkan diri (No Attrition).")
